spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.initialize-schema=always
spring.quartz.jdbc.initialize-schema=never
#是否加入集群
spring.quartz.properties.org.quartz.jobStore.isClustered=false

#quartz_store
#方式1，直接共用spring上下文的数据源，不建议
#参见org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration.JdbcStoreTypeConfiguration.getDataSource
#当没有配置quartz的数据源时，就直接拿当前上下文中的数据源
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://42.192.183.108:3306/quartz_store?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&allowMultiQueries=true
spring.datasource.username=lql
spring.datasource.password=lql
#方式二，自定义数据源，然后添加 @QuartzDataSource ，推荐
#当然，这种方式spring jdbc starter自动装配的数据源也没了，也需要自己配置一下
quartz.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
quartz.datasource.url=jdbc:mysql://42.192.183.108:3306/quartz_store?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&allowMultiQueries=true
quartz.datasource.username=lql
quartz.datasource.password=lql
#方式三，使用quartz配置文件实现，其默认是c3p0,可通过实现自定义 ConnectionProvider 替换为其他数据源，太麻烦
