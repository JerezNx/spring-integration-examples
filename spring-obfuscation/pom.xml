<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>xyz.jerez.spring</groupId>
    <artifactId>spring-obfuscation</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-obfuscation</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <proguard.version>6.2.0</proguard.version>
        <proguard.maven.plugin.version>2.2.0</proguard.maven.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>${proguard.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <proguardVersion>${proguard.version}</proguardVersion>
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}.jar</outjar>
                    <obfuscate>true</obfuscate>
                    <options>
                        <!--  ##默认是开启的，这里关闭shrink，即不删除没有使用的类/成员-->
                        <option>-dontshrink</option>
                        <!-- ##默认是开启的，这里关闭字节码级别的优化-->
                        <option>-dontoptimize</option>
                        <!--##对于类成员的命名的混淆采取唯一策略-->
                        <option>-useuniqueclassmembernames</option>
                        <!--- 混淆类名之后，对使用Class.forName('className')之类的地方进行相应替代-->
                        <option>-adaptclassstrings </option>
                        <option>-ignorewarnings</option>
                        <!-- 混淆时不生成大小写混合的类名，默认是可以大小写混合-->
                        <option>-dontusemixedcaseclassnames</option>
                        <!-- This option will replace all strings in reflections method invocations with new class names.
                             For example, invokes Class.forName('className')-->
                        <!-- <option>-adaptclassstrings</option> -->
                        <!-- This option will save all original annotations and etc. Otherwise all we be removed from files.-->
                        <!-- 不混淆所有特殊的类-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod</option>
                        <!-- This option will save all original names in interfaces (without obfuscate).-->
<!--                        <option>-keepnames interface **</option>-->
                        <!-- This option will save all original methods parameters in files defined in -keep sections,
                             otherwise all parameter names will be obfuscate.-->
<!--                        <option>-keepparameternames</option>-->
                        <!-- <option>-libraryjars **</option> -->
                        <!-- This option will save all original class files (without obfuscate) but obfuscate all in domain package.-->
                        <!--<option>-keep class !com.slm.proguard.example.spring.boot.domain.** { *; }</option>-->
                        <option>-keep class !xyz.jerez.spring.obfuscation.** { *; }</option>
                        <!--保留不然Mybatis报错-->
                        <option>-keep class xyz.jerez.spring.obfuscation.entity.** { *; }</option>
                        <option>-keep class xyz.jerez.spring.obfuscation.utils.PageRes { *; }</option>
<!--                        <option>-keep class xyz.jerez.spring.obfuscation.controller.** { *; }</option>-->
                        <option>-keep class xyz.jerez.spring.obfuscation.config.** { *; }</option>
                        <option>-keep class xyz.jerez.spring.obfuscation.dto.** { *; }</option>
                        <option>-keep class * implements java.io.Serializable </option>
                        <!-- This option will save all original class files (without obfuscate) in service package-->
                        <!--<option>-keep class com.slm.proguard.example.spring.boot.service { *; }</option>-->
                        <!-- This option will save all original interfaces files (without obfuscate) in all packages.-->
<!--                        <option>-keep interface * extends * { *; }</option>-->
                        <!-- <option>-keep @org.springframework.stereotype.Service class *</option> -->

                        <option>-keep
                            class xyz.jerez.spring.obfuscation.SpringObfuscationApplication {
                            public static void main(java.lang.String[]);
                            }
                        </option>
                        <!-- This option will save all original defined annotations in all class in all packages.-->
                        <option>-keepclassmembers class * {
                            <!-- @org.springframework.beans.factory.annotation.Autowired *; -->
                            @org.springframework.beans.factory.annotation.Value *;
                            }
                        </option>
                    </options>
                    <injarNotExistsSkip>true</injarNotExistsSkip>
                    <libs>
                        <!--Put here your libraries if required-->
                        <lib>${java.home}/lib/rt.jar</lib>
                    </libs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>${proguard.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <mainClass>xyz.jerez.spring.obfuscation.SpringObfuscationApplication</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
